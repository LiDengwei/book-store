<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
		 xmlns:b="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns:util="http://www.springframework.org/schema/util"
		 xmlns:context="http://www.springframework.org/schema/context"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans
 	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:config.properties" />

	<b:bean id="jedisClient" class="com.book.util.redis.JedisClient">
		<b:constructor-arg name="address" value="${redis.host}"/>
		<b:constructor-arg name="port" value="${redis.port}"/>
	</b:bean>


	<!-- <global-method-security pre-post-annotations="enabled" /> -->
	<!-- 引入属性文件 -->
	<!--<context:property-placeholder location="classpath:config.properties" />-->
	<b:import resource="classpath:dubbo/dubbo-consumer.xml"/>

	 <!--<bean id="mappingJacksonHttpMessageConverter"-->
          <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
		 <!--<property name="supportedMediaTypes">-->
				<!--<list>-->
					<!--如果想得到json的支持类型，就要这样配置：-->
				<!--<value>application/json;charset=UTF-8</value>-->
				<!--</list>-->
		<!--</property>-->
	<!--</bean>-->

	<!-- access-denied-page配置访问失败页面 -->
	<http auto-config="true" access-denied-page="/static/view/accessDenied.html">
		<!-- 不要过滤图片等静态资源，其中**代表可以跨越目录，*不可以跨越目录。 -->
		<intercept-url pattern="/**/*.jpg" filters="none" />
		<intercept-url pattern="/**/*.png" filters="none" />
		<intercept-url pattern="/**/image.html" filters="none" />
		<intercept-url pattern="/**/controller.jsp" filters="none" />
		<intercept-url pattern="/**/jquery-1.10.2.min.map" filters="none" />
		<intercept-url pattern="/**/*.gif" filters="none" />
		<intercept-url pattern="/**/*.css" filters="none" />
		<intercept-url pattern="/**/*.js" filters="none" />
		<intercept-url pattern="/**/*.ico" filters="none" />
		<intercept-url pattern="/login.htm*" filters="none"/>
		<intercept-url pattern="/user/msg" filters="none" />
		<intercept-url pattern="/user/language" filters="none" access="IS_AUTHENTICATED_FULLY"/>
		<intercept-url pattern="/**" filters="none"/>
		<!--<intercept-url pattern="/**" access="ROLE_ALL_PUBLIC_INDEX"/>-->
		<!-- 配置登录页面 -->
		<form-login login-page="/login.html"
					default-target-url="/user/index" authentication-failure-url="/login.html?error=true"
					login-processing-url="/user/login"/>
		<!--"记住我"功能，采用持久化策略(将用户的登录信息存放在数据库表中) -->
		 <!--<remember-me data-source-ref="dataSource"/> -->
		<!-- 用户退出的跳转页面 -->
		<logout logout-success-url="/login.html" invalidate-session="true"
				logout-url="/logout" />

		<!-- 检测失效的sessionId,超时时定位到另外一个URL -->
		<!-- 会话管理，设置最多登录异常，error-if-maximum-exceeded = false为第二次登录就会使前一个登录失效 -->
		<session-management invalid-session-url="/login.html?msg=0" session-authentication-error-url="/login.html?msg=1">
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="false" />
		</session-management>

		<!--添加自定义的过滤器 放在FILTER_SECURITY_INTERCEPTOR之前有效  -->
		<custom-filter ref="customFilterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>

	<!-- 配置认证管理器 -->
	<!-- 注意能够为authentication-manager 设置alias别名  -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder hash="md5"/>
			<!-- <jdbc-user-service data-source-ref="dataSource"/> -->
		</authentication-provider>
		<authentication-provider ref="customAuthenticationProvider" />
	</authentication-manager>
</b:beans>